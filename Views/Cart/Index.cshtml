@using Microsoft.AspNetCore.Identity

@inject SignInManager<ApplicationUser> SignInManager
@using E_commerce.Models;
@using System.Security.Claims

@model E_commerce.Models.Cart

@{
    var user = await SignInManager.UserManager.GetUserAsync(User);
    string loggedInUserId = user?.Id;
    var userCart = Model.CartProducts.Where(cart => cart.UserId == loggedInUserId).ToList();
}

<div class="container">
    <h1>Your Shopping Cart</h1>

<style>
    <!-- Your CSS styles here -->
</style>

<section class="h-100 h-custom" style="background-color: #eee;">
    <div class="container h-100 py-5">
        <div class="row d-flex justify-content-center align-items-center h-100">
            <div class="col">
                <div class="card shopping-Cart" style="border-radius: 15px;">
                    <div class="card-body text-black">

                        <div class="row">
                            <div class="col-lg-6 px-5 py-4">

                                <h3 class="mb-5 pt-2 text-center fw-bold text-uppercase">Your products</h3>

                                @if (Model != null && Model.Any())
                                {
                                    @foreach (var item in Model)
                                    {
                                        <!-- Cart item display code here -->
                                        <div class="d-flex align-items-center mb-5">
                                            <div class="flex-shrink-0">
                                                <img src="@item.Product.ImageUrl" class="img-fluid" style="width: 150px;" alt="Product Image">
                                            </div>
                                            <div class="flex-grow-1 ms-3">
                                                <a href="#!" class="float-end text-black"><i class="fas fa-times"></i></a>
                                                <h5 class="text-primary">@item.Product.Name</h5>
                                                <h6 style="color: #9e9e9e;">Color: white</h6>
                                                <div class="d-flex align-items-center">
                                                    <p class="fw-bold mb-0 me-5 pe-3">@item.Product.Price$</p>
                                                    <div class="def-number-input number-input safari_only">
                                                        <button onclick="this.parentNode.querySelector('input[type=number]').stepDown()"
                                                            class="minus"></button>
                                                        <input class="quantity fw-bold text-black" min="0" name="quantity" value="@item.Quantity"
                                                            type="number">
                                                        <button onclick="this.parentNode.querySelector('input[type=number]').stepUp()"
                                                            class="plus"></button>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    }
                                }
                                else
                                {
                                    <p>Your cart is empty.</p>
                                }

                                <hr class="mb-4" style="height: 2px; background-color: #1266f1; opacity: 1;">

                                <!-- Discount and Total display code here -->

                            </div>
                            <div class="col-lg-6 px-5 py-4">
                                <!-- Payment form and details code here -->
                            </div>
                        </div>

        <div class="text-right">
            <p>Total: @(userCart.Sum(item => item.Quantity * item.Product.Price))</p>
            <a href="#" class="btn btn-primary">Checkout</a>
        </div>
    }
</div>